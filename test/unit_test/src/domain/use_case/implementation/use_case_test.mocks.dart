// Mocks generated by Mockito 5.4.6 from annotations
// in dojo_challenges/test/unit_test/src/domain/use_case/implementation/use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dojo_challenges/src/core/resource/data_state.dart' as _i2;
import 'package:dojo_challenges/src/domain/entity/movie_list_entity.dart'
    as _i5;
import 'package:dojo_challenges/src/domain/repository/repository_interface.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryInterface extends _i1.Mock
    implements _i3.RepositoryInterface {
  MockRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<_i5.MovieListEntity>> getMovieList() =>
      (super.noSuchMethod(
            Invocation.method(#getMovieList, []),
            returnValue: _i4.Future<_i2.DataState<_i5.MovieListEntity>>.value(
              _FakeDataState_0<_i5.MovieListEntity>(
                this,
                Invocation.method(#getMovieList, []),
              ),
            ),
          )
          as _i4.Future<_i2.DataState<_i5.MovieListEntity>>);
}
